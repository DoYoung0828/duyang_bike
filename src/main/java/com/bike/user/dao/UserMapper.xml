<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bike.user.dao.UserMapper">

    <!--返回值,column对应实体类字段,property对应数据库字段-->
    <resultMap id="BaseResultMap" type="com.bike.user.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="head_img" property="headImg" jdbcType="VARCHAR"/>
        <result column="verify_flag" property="verifyFlag" jdbcType="TINYINT"/>
        <result column="enable_flag" property="enableFlag" jdbcType="TINYINT"/>
    </resultMap>

    <!--sql字段-->
    <sql id="Base_Column_List">
    id, nickname, mobile, head_img, verify_flag, enable_flag
    </sql>

    <!--1.1、根据手机号码查找用户-->
    <select id="selectByMobile" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where mobile = #{mobile,jdbcType=BIGINT}
    </select>

    <!--1.2、用户不存在时,注册用户-->
    <!--useGeneratedKeys设置为true时,如果插入表id以自增为主键,可将自增主键返回(int类型),仅针对insert,默认为false-->
    <insert id="insertSelective" parameterType="com.bike.user.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="headImg != null">
                head_img,
            </if>
            <if test="verifyFlag != null">
                verify_flag,
            </if>
            <if test="enableFlag != null">
                enable_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null">
                #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="verifyFlag != null">
                #{verifyFlag,jdbcType=TINYINT},
            </if>
            <if test="enableFlag != null">
                #{enableFlag,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <!--2、修改用户昵称-->
    <update id="updateByPrimaryKeySelective" parameterType="com.bike.user.entity.User">
        update user
        <set>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null">
                head_img = #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="verifyFlag != null">
                verify_flag = #{verifyFlag,jdbcType=TINYINT},
            </if>
            <if test="enableFlag != null">
                enable_flag = #{enableFlag,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--4、根据userId获取用户信息(校验是否实名认证)-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!--<update id="updateByPrimaryKey" parameterType="com.bike.user.entity.User">-->
    <!--update user-->
    <!--set nickname = #{nickname,jdbcType=VARCHAR},-->
    <!--mobile = #{mobile,jdbcType=VARCHAR},-->
    <!--head_img = #{headImg,jdbcType=VARCHAR},-->
    <!--verify_flag = #{verifyFlag,jdbcType=TINYINT},-->
    <!--enable_flag = #{enableFlag,jdbcType=TINYINT}-->
    <!--where id = #{id,jdbcType=BIGINT}-->
    <!--</update>-->


    <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">-->
    <!--delete from user-->
    <!--where id = #{id,jdbcType=BIGINT}-->
    <!--</delete>-->
    <!---->
    <!--<insert id="insert" parameterType="com.bike.user.entity.User">-->
    <!--insert into user (id, nickname, mobile, -->
    <!--head_img, verify_flag, enable_flag-->
    <!--)-->
    <!--values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, -->
    <!--#{headImg,jdbcType=VARCHAR}, #{verifyFlag,jdbcType=TINYINT}, #{enableFlag,jdbcType=TINYINT}-->
    <!--)-->
    <!--</insert>-->

</mapper>